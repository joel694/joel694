#include <stdio.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];    // pivot
    int i = (low - 1);  // Index of smaller element

    for (int j = low; j <= high - 1; j++) {
        // If current element is smaller than the pivot
        if (arr[j] < pivot) {
            i++;    // increment index of smaller element
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        // Separately sort elements before partition and after partition
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    int n;
    printf("Enter the number of product IDs: ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter Product IDs:\n");
    for(int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    quickSort(arr, 0, n - 1);

    printf("After Sorting Product IDs:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}


OUTPUT
Enter the number of product IDs: 12
Enter Product IDs:
87 67 21 59 99 46 84 32 43 12 90 23

After Sorting Product IDs:
12 21 23 32 43 46 59 67 84 87 90 99 

Enter the number of product IDs: 12
Enter Product IDs:
64 56 21 90 32 87 59 60 43 10 29 74

After Sorting Product IDs:
10 21 29 32 43 56 59 60 64 74 87 90 
